from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import state
from aiogram.dispatcher.filters.builtin import CommandStart

from keyboards.default.keyboard import auth_contact, main_menu, geo_send, location
from loader import dp


@dp.message_handler(CommandStart())
async def bot_start(message: types.Message, state: FSMContext):
    await message.answer(f"""–ü—Ä–∏–≤—ñ—Çüëãüèª {message.from_user.full_name}!
–í—ñ—Ç–∞—î–º–æ —Ç–µ–±–µ —É –±–æ—Ç—ñ. –¢—É—Ç —î —É—Å—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è, —è–∫–∞ –ø–æ–ª–µ–≥—à–∏—Ç—å —Ç–æ–±—ñ —Ä–æ–±–æ—Ç—É —â–æ–¥–Ω—èüî•
–ù–∞–¥—ñ—à–ª–∏ —Å–≤—ñ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –¥–ª—è —Ç–æ–≥–æ, —â–æ–± –∞–≤—Ç–æ—Ä–∏–∑—É–≤–∞—Ç–∏—Å—å –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –∫–Ω–æ–ø–∫–∏ –∑–Ω–∏–∑—É""",
                         reply_markup=auth_contact)
    await state.set_state('auth')


@dp.message_handler(state='auth')
async def auth_text(message: types.Message):
    await message.answer("–ù–∞–¥—ñ—à–ª–∏ —Å–≤—ñ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –¥–ª—è —Ç–æ–≥–æ, —â–æ–± –∞–≤—Ç–æ—Ä–∏–∑—É–≤–∞—Ç–∏—Å—å –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –∫–Ω–æ–ø–∫–∏ –∑–Ω–∏–∑—É",
                         reply_markup=auth_contact)


@dp.message_handler(content_types=types.ContentTypes.CONTACT, state='auth')
async def auth_tel(message: types.Message, state: FSMContext):
    await message.answer("–í—ñ—Ç–∞—î–º–æ –≤–∞—Å –≤ –±–æ—Ç—ñ! –¢–µ–ø–µ—Ä –≤–∏ –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–≤–∂—É–≤–∞—Ç–∏ —Ä–æ–±–æ—Ç—É –∑ –±–æ—Ç–æ–ºü§ñ",
                         reply_markup=main_menu)
    await state.finish()


@dp.message_handler(text='–ó–º—ñ–Ω–∞')
async def work_time(message: types.Message):
    await message.answer('–ü—Ä–∏–≤—ñ—Çüëãüèª –ü–æ–¥—ñ–ª–∏—Å—å –≥–µ–æ-–ª–æ–∫–∞—Ü—ñ—î—é', reply_markup=geo_send)


@dp.message_handler(content_types=types.ContentTypes.LOCATION)
async def work_time_place(message: types.Message):
    await message.answer('–¢–µ–ø–µ—Ä –æ–±–µ—Ä–∏ –∑–∞–ª, –≤ —è–∫–æ–º—É —Å—å–æ–≥–æ–¥–Ω—ñ –ø—Ä–∞—Ü—é—î—à üí™üèª', reply_markup=location)


@dp.callback_query_handler(lambda call: call.data in ['hashtag_1_0', 'hashtag_2_0', 'litniy_maydanchik_1_0', 'litniy_maydanchik_2_0'])
async def hashtag_callback(call: types.CallbackQuery):
    await call.message.answer(f"–í–∏ –æ–±—Ä–∞–ª–∏ –≥–µ–æ-–ª–æ–∫–∞—Ü—ñ—é: {call.data}")
    if call.data == 'hashtag_1_0':
        await call.message.edit_text(f"–ß–µ–∫ –ª–∏—Å—Ç 1.0", reply_markup=main_menu)
    await call.message.edit_text(f"", reply_markup=main_menu)

